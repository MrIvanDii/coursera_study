# Переопределение метода
# Переопределение метода относится к наличию метода с одинаковым названием в дочернем и родительском классах.
# Определение метода отличается в родительском и дочернем классах, но название остается тем же.
# Давайте посмотрим на простой пример переопределения метода в Python.


# создание класса Vehicle
class Vehicle:
    def print_details(self):
        print("Это родительский метод из класса Vehicle")


# создание класса, который наследует Vehicle
class Car(Vehicle):
    def print_details(self):
        print("Это дочерний метод из класса Car")


# создание класса Cycle, который наследует Vehicle
class Cycle(Vehicle):
    def print_details(self):
        print("Это дочерний метод из класса Cycle")

#В скрипте выше, классы Cycle и Car наследуют класс Vehicle.
# Класс Vehicle содержит метод print_details(), который переопределен дочерним классом.
# Теперь, если вы вызовите метод print_details(), выдача будет зависеть от объекта, через который вызывается метод.
# Выполните следующий скрипт, чтобы понять суть на деле:

car_a = Vehicle()
car_a.print_details()

car_b = Car()
car_b.print_details()

car_c = Cycle()
car_c.print_details()

# Это родительский метод из класса Vehicle
# Это дочерний метод из класса Car
# Это дочерний метод из класса Cycle