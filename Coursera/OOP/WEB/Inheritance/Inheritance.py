# Основная идея наследования в объектно-ориентированном программировании заключается в том,
# что класс может наследовать характеристики другого класса. Класс, который наследует другой класс,
# называется дочерним классом или производным классом, и класс, который дает наследие, называется родительским,
# или основным.


# Создание класса Vehicle
class Vehicle:
    def vehicle_method(self):
        print("Это родительский метод из класса Vehicle")


# Создание класса Car, который наследует Vehicle
class Car(Vehicle):
    def car_method(self):
        print("Это метод из дочернего класса")

# В скрипте выше мы создаем два класса: Vehicle и Car, который наследует класс Vehicle.
# Чтобы наследовать класс, вам нужно только вписать название родительского класса внутри скобок,
# которая следует за названием дочернего класса. Класс Vehicle содержит метод vehicle_method(),
# а дочерний класс содержит метод car_method(). Однако, так как класс Car наследует класс Vehicle,
# он также наследует и метод vehicle_method().

# Рассмотрим это на практике и выполним следующий скрипт:

car_a = Car()

car_a.vehicle_method()  # Вызываем метод родительского класса
# Это родительский метод из класса Vehicle

